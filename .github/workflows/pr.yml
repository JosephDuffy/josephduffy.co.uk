name: Pull Request Checks

on: [pull_request]

jobs:
  build_image:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Make GITHUB_ACCESS_TOKEN available
        run: echo $DOCKER_GITHUB_ACCESS_TOKEN > GITHUB_ACCESS_TOKEN
        env:
          DOCKER_GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get short hash
        run: echo "##[set-output name=short-hash;]$(git rev-parse --short HEAD)"
        id: short-hash

      - name: Docker Build
        run: docker
          build .
          -t ghcr.io/josephduffy/josephduffy.co.uk:$GITHUB_SHA --secret=id=GITHUB_ACCESS_TOKEN,src=./GITHUB_ACCESS_TOKEN
          --build-arg "BUILD_DATE=$(date -u)"
          --build-arg "GIT_COMMIT=${{ steps.short-hash.outputs.short-hash }}"
          --build-arg "WEBSITE_URL=${WEBSITE_URL}"
          --build-arg "HCAPTCHA_SITE_KEY=3549990c-5b31-4c18-84b6-e7f57fcde61b"
        env:
          DOCKER_BUILDKIT: "1"
          WEBSITE_URL: "https://${{ steps.short-hash.outputs.short-hash }}.josephduffy.co.uk/"

  check_format:
    name: Check for formatting errors using on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Install node
        uses: actions/setup-node@v3.0.0
        with:
          node-version-file: ".node-version"
          cache: "npm"

      - run: npm install
      - run: npm run format:check

  lint:
    name: Check for linting errors using on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Install node
        uses: actions/setup-node@v3.0.0
        with:
          node-version-file: ".node-version"
          cache: "npm"

      - run: npm install

      - run: npm run lint -- --max-warnings=0

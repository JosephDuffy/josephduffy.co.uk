name: Pull Request Checks

on: [pull_request]

jobs:
  build_image:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Make GITHUB_ACCESS_TOKEN available
        run: echo $GITHUB_ACCESS_TOKEN > GITHUB_ACCESS_TOKEN
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_ACCESS_TOKEN }}

      - name: Docker Build
        run: DOCKER_BUILDKIT=1 docker build . -t docker.pkg.github.com/josephduffy/josephduffy.co.uk/website:$GITHUB_SHA --secret=id=GITHUB_ACCESS_TOKEN,src=./GITHUB_ACCESS_TOKEN

  check_format:
    name: Check for formatting errors using on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Read .node-version
        run: echo "##[set-output name=node-version;]$(cat .node-version)"
        id: node-version

      - name: Install node
        uses: actions/setup-node@v2-beta
        with:
          node-version: "${{ steps.node-version.outputs.node-version }}"

      - run: npm install
      - run: npm run format:check

  lint:
    name: Check for linting errors using on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Read .node-version
        run: echo "##[set-output name=node-version;]$(cat .node-version)"
        id: node-version

      - name: Install node
        uses: actions/setup-node@v2-beta
        with:
          node-version: "${{ steps.node-version.outputs.node-version }}"

      - run: npm install
      - run: npm run lint
